call scalaapi#package('scala.collection.parallel', '', '[p]', [], [])
call scalaapi#class('AdaptiveWorkStealingForkJoinTasksWrappedTask', 'scala.collection.parallel', '[c]', [], [])
call scalaapi#trait('AdaptiveWorkStealingForkJoinTasks', 'scala.collection.parallel', '[t]', ['ForkJoinTasks', 'AdaptiveWorkStealingTasks'], [])
call scalaapi#trait('AdaptiveWorkStealingTasksWrappedTask', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('AdaptiveWorkStealingTasks', 'scala.collection.parallel', '[t]', ['Tasks'], [])
call scalaapi#class('AdaptiveWorkStealingThreadPoolTasksWrappedTask', 'scala.collection.parallel', '[c]', [], [])
call scalaapi#trait('AdaptiveWorkStealingThreadPoolTasks', 'scala.collection.parallel', '[t]', ['ThreadPoolTasks', 'AdaptiveWorkStealingTasks'], [])
call scalaapi#trait('Combiner', 'scala.collection.parallel', '[t]', ['Builder', 'Sizing', 'Parallel'], [])
call scalaapi#trait('CombinerFactory', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('ExecutionContextTasks', 'scala.collection.parallel', '[t]', ['Tasks'], [])
call scalaapi#class('ExecutionContextTaskSupport', 'scala.collection.parallel', '[c]', ['TaskSupport', 'ExecutionContextTasks'], [])
call scalaapi#trait('FactoryOpsOtherwise', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('FactoryOps', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#object('ForkJoinTasks', 'scala.collection.parallel', '[o]', [], [])
call scalaapi#trait('ForkJoinTasksWrappedTask', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('ForkJoinTasks', 'scala.collection.parallel', '[t]', ['Tasks', 'HavingForkJoinPool'], [])
call scalaapi#class('ForkJoinTaskSupport', 'scala.collection.parallel', '[c]', ['TaskSupport', 'AdaptiveWorkStealingForkJoinTasks'], [])
call scalaapi#object('FutureThreadPoolTasks', 'scala.collection.parallel', '[o]', [], [])
call scalaapi#trait('HavingForkJoinPool', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('IterableSplitterAppended', 'scala.collection.parallel', '[c]', ['IterableSplitter'], [])
call scalaapi#class('IterableSplitterMapped', 'scala.collection.parallel', '[c]', ['IterableSplitter'], [])
call scalaapi#class('IterableSplitterTaken', 'scala.collection.parallel', '[c]', ['IterableSplitter'], [])
call scalaapi#class('IterableSplitterZipped', 'scala.collection.parallel', '[c]', ['IterableSplitter'], [])
call scalaapi#class('IterableSplitterZippedAll', 'scala.collection.parallel', '[c]', ['IterableSplitter'], [])
call scalaapi#trait('IterableSplitter', 'scala.collection.parallel', '[t]', ['Splitter', 'Signalling', 'DelegatedSignalling'], [])
call scalaapi#class('package.CollectionsHaveToParArray', 'scala.collection.parallel', '[c]', [], [])
call scalaapi#object('ParIterable', 'scala.collection.parallel', '[o]', ['ParFactory', 'ParIterable'], [])
call scalaapi#trait('ParIterable', 'scala.collection.parallel', '[t]', ['GenIterable', 'GenericParTemplate', 'ParIterable', 'ParIterableLike', 'ParIterable'], [])
call scalaapi#trait('ParIterableLikeAccessor', 'scala.collection.parallel', '[t]', ['StrictSplitterCheckTask'], [])
call scalaapi#class('ParIterableLikeAggregate', 'scala.collection.parallel', '[c]', ['Accessor', 'Aggregate'], [])
call scalaapi#trait('ParIterableLikeBuilderOpsOtherwise', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('ParIterableLikeBuilderOps', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('ParIterableLikeCollect', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Collect'], [])
call scalaapi#class('ParIterableLikeComposite', 'scala.collection.parallel', '[c]', ['NonDivisibleTask', 'Composite'], [])
call scalaapi#class('ParIterableLikeCopy', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Copy'], [])
call scalaapi#class('ParIterableLikeCopyToArray', 'scala.collection.parallel', '[c]', ['Accessor', 'Unit', 'CopyToArray'], [])
call scalaapi#class('ParIterableLikeCount', 'scala.collection.parallel', '[c]', ['Accessor', 'Int', 'Count'], [])
call scalaapi#class('ParIterableLikeCreateScanTree', 'scala.collection.parallel', '[c]', ['Transformer', 'ScanTree', 'CreateScanTree'], [])
call scalaapi#class('ParIterableLikeDrop', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Drop'], [])
call scalaapi#class('ParIterableLikeExists', 'scala.collection.parallel', '[c]', ['Accessor', 'Boolean', 'Exists'], [])
call scalaapi#class('ParIterableLikeFilter', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Filter'], [])
call scalaapi#class('ParIterableLikeFilterNot', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'FilterNot'], [])
call scalaapi#class('ParIterableLikeFind', 'scala.collection.parallel', '[c]', ['Accessor', 'Option', 'Find'], [])
call scalaapi#class('ParIterableLikeFlatMap', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'FlatMap'], [])
call scalaapi#class('ParIterableLikeFold', 'scala.collection.parallel', '[c]', ['Accessor', 'Fold'], [])
call scalaapi#class('ParIterableLikeForall', 'scala.collection.parallel', '[c]', ['Accessor', 'Boolean', 'Forall'], [])
call scalaapi#class('ParIterableLikeForeach', 'scala.collection.parallel', '[c]', ['Accessor', 'Unit', 'Foreach'], [])
call scalaapi#class('ParIterableLikeFromScanTree', 'scala.collection.parallel', '[c]', ['StrictSplitterCheckTask', 'Combiner', 'FromScanTree'], [])
call scalaapi#class('ParIterableLikeGroupBy', 'scala.collection.parallel', '[c]', ['Transformer', 'GroupBy'], [])
call scalaapi#class('ParIterableLikeMap', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Map'], [])
call scalaapi#class('ParIterableLikeMax', 'scala.collection.parallel', '[c]', ['Accessor', 'Option', 'Max'], [])
call scalaapi#class('ParIterableLikeMin', 'scala.collection.parallel', '[c]', ['Accessor', 'Option', 'Min'], [])
call scalaapi#trait('ParIterableLikeNonDivisible', 'scala.collection.parallel', '[t]', ['NonDivisibleTask', 'NonDivisible'], [])
call scalaapi#trait('ParIterableLikeNonDivisibleTask', 'scala.collection.parallel', '[t]', ['StrictSplitterCheckTask'], [])
call scalaapi#class('ParIterableLikeParComposite', 'scala.collection.parallel', '[c]', ['Composite'], [])
call scalaapi#class('ParIterableLikePartition', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Combiner', 'Partition'], [])
call scalaapi#class('ParIterableLikeProduct', 'scala.collection.parallel', '[c]', ['Accessor', 'Product'], [])
call scalaapi#class('ParIterableLikeReduce', 'scala.collection.parallel', '[c]', ['Accessor', 'Option', 'Reduce'], [])
call scalaapi#class('ParIterableLikeResultMapping', 'scala.collection.parallel', '[c]', ['NonDivisibleTask', 'ResultMapping'], [])
call scalaapi#trait('ParIterableLikeScanTree', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('ParIterableLikeSeqComposite', 'scala.collection.parallel', '[c]', ['Composite'], [])
call scalaapi#trait('ParIterableLikeSignallingOps', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('ParIterableLikeSlice', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Slice'], [])
call scalaapi#class('ParIterableLikeSpan', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Combiner', 'Span'], [])
call scalaapi#class('ParIterableLikeSplitAt', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Combiner', 'SplitAt'], [])
call scalaapi#trait('ParIterableLikeStrictSplitterCheckTask', 'scala.collection.parallel', '[t]', ['Task'], [])
call scalaapi#class('ParIterableLikeSum', 'scala.collection.parallel', '[c]', ['Accessor', 'Sum'], [])
call scalaapi#class('ParIterableLikeTake', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Take'], [])
call scalaapi#class('ParIterableLikeTakeWhile', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Boolean', 'TakeWhile'], [])
call scalaapi#trait('ParIterableLikeTaskOps', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('ParIterableLikeToParCollection', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'ToParCollection'], [])
call scalaapi#class('ParIterableLikeToParMap', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'ToParMap'], [])
call scalaapi#trait('ParIterableLikeTransformer', 'scala.collection.parallel', '[t]', ['Accessor'], [])
call scalaapi#class('ParIterableLikeZip', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Zip'], [])
call scalaapi#class('ParIterableLikeZipAll', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'ZipAll'], [])
call scalaapi#trait('ParIterableLike', 'scala.collection.parallel', '[t]', ['GenIterableLike', 'CustomParallelizable', 'Parallel', 'HasNewCombiner'], [])
call scalaapi#class('ParMap.WithDefault', 'scala.collection.parallel', '[c]', ['ParMap'], [])
call scalaapi#object('ParMap', 'scala.collection.parallel', '[o]', ['ParMapFactory', 'ParMap'], [])
call scalaapi#trait('ParMap', 'scala.collection.parallel', '[t]', ['GenMap', 'GenericParMapTemplate', 'ParMap', 'ParIterable', 'ParMapLike', 'ParMap', 'Map'], [])
call scalaapi#class('ParMapLikeDefaultKeySet', 'scala.collection.parallel', '[c]', ['ParSet'], [])
call scalaapi#class('ParMapLikeDefaultValuesIterable', 'scala.collection.parallel', '[c]', ['ParIterable'], [])
call scalaapi#trait('ParMapLike', 'scala.collection.parallel', '[t]', ['GenMapLike', 'ParIterableLike'], [])
call scalaapi#object('ParSeq', 'scala.collection.parallel', '[o]', ['ParFactory', 'ParSeq'], [])
call scalaapi#trait('ParSeq', 'scala.collection.parallel', '[t]', ['GenSeq', 'ParIterable', 'GenericParTemplate', 'ParSeq', 'ParSeqLike', 'ParSeq'], [])
call scalaapi#trait('ParSeqLikeAccessor', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#class('ParSeqLikeCorresponds', 'scala.collection.parallel', '[c]', ['Accessor', 'Boolean', 'Corresponds'], [])
call scalaapi#class('ParSeqLikeElements', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('ParSeqLikeIndexWhere', 'scala.collection.parallel', '[c]', ['Accessor', 'Int', 'IndexWhere'], [])
call scalaapi#class('ParSeqLikeLastIndexWhere', 'scala.collection.parallel', '[c]', ['Accessor', 'Int', 'LastIndexWhere'], [])
call scalaapi#class('ParSeqLikeReverse', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Reverse'], [])
call scalaapi#class('ParSeqLikeReverseMap', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'ReverseMap'], [])
call scalaapi#class('ParSeqLikeSameElements', 'scala.collection.parallel', '[c]', ['Accessor', 'Boolean', 'SameElements'], [])
call scalaapi#class('ParSeqLikeSegmentLength', 'scala.collection.parallel', '[c]', ['Accessor', 'Int', 'Boolean', 'SegmentLength'], [])
call scalaapi#trait('ParSeqLikeTransformer', 'scala.collection.parallel', '[t]', ['Accessor'], [])
call scalaapi#class('ParSeqLikeUpdated', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Updated'], [])
call scalaapi#class('ParSeqLikeZip', 'scala.collection.parallel', '[c]', ['Transformer', 'Combiner', 'Zip'], [])
call scalaapi#trait('ParSeqLike', 'scala.collection.parallel', '[t]', ['GenSeqLike', 'ParIterableLike'], [])
call scalaapi#object('ParSet', 'scala.collection.parallel', '[o]', ['ParSetFactory', 'ParSet'], [])
call scalaapi#trait('ParSet', 'scala.collection.parallel', '[t]', ['GenSet', 'GenericParTemplate', 'ParSet', 'ParIterable', 'ParSetLike', 'ParSet', 'Set'], [])
call scalaapi#trait('ParSetLike', 'scala.collection.parallel', '[t]', ['GenSetLike', 'ParIterableLike'], [])
call scalaapi#trait('PreciseSplitter', 'scala.collection.parallel', '[t]', ['Splitter'], [])
call scalaapi#class('SeqSplitterAppended', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('SeqSplitterMapped', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('SeqSplitterPatched', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('SeqSplitterTaken', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('SeqSplitterZipped', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#class('SeqSplitterZippedAll', 'scala.collection.parallel', '[c]', ['SeqSplitter'], [])
call scalaapi#trait('SeqSplitter', 'scala.collection.parallel', '[t]', ['IterableSplitter', 'PreciseSplitter'], [])
call scalaapi#object('Splitter', 'scala.collection.parallel', '[o]', [], [])
call scalaapi#trait('Splitter', 'scala.collection.parallel', '[t]', ['Iterator'], [])
call scalaapi#trait('Task', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('TasksWrappedTask', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('Tasks', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('TaskSupport', 'scala.collection.parallel', '[t]', ['Tasks'], [])
call scalaapi#object('ThreadPoolTasks', 'scala.collection.parallel', '[o]', [], [])
call scalaapi#trait('ThreadPoolTasksWrappedTask', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('ThreadPoolTasks', 'scala.collection.parallel', '[t]', ['Tasks'], [])
call scalaapi#class('ThreadPoolTaskSupport', 'scala.collection.parallel', '[c]', ['TaskSupport', 'AdaptiveWorkStealingThreadPoolTasks'], [])
call scalaapi#trait('ThrowableOps', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('TraversableOpsOtherwise', 'scala.collection.parallel', '[t]', [], [])
call scalaapi#trait('TraversableOps', 'scala.collection.parallel', '[t]', [], [])

call scalaapi#package('scala.collection', '', '[p]', [], [])
call scalaapi#object('colonplus', 'scala.collection', '[o]', [], [])
call scalaapi#object('pluscolon', 'scala.collection', '[o]', [], [])
call scalaapi#class('AbstractIterable', 'scala.collection', '[c]', ['AbstractTraversable', 'Iterable'], [])
call scalaapi#class('AbstractIterator', 'scala.collection', '[c]', ['Iterator'], [])
call scalaapi#class('AbstractMap', 'scala.collection', '[c]', ['AbstractIterable', 'Map'], [])
call scalaapi#class('AbstractSeq', 'scala.collection', '[c]', ['AbstractIterable', 'Seq'], [])
call scalaapi#class('AbstractSet', 'scala.collection', '[c]', ['AbstractIterable', 'Set'], [])
call scalaapi#class('AbstractTraversable', 'scala.collection', '[c]', ['Traversable'], [])
call scalaapi#object('BitSet', 'scala.collection', '[o]', ['BitSetFactory', 'BitSet'], [])
call scalaapi#trait('BitSet', 'scala.collection', '[t]', ['SortedSet', 'Int', 'BitSetLike', 'BitSet'], [])
call scalaapi#object('BitSetLike', 'scala.collection', '[o]', [], [])
call scalaapi#trait('BitSetLike', 'scala.collection', '[t]', ['SortedSetLike', 'Int'], [])
call scalaapi#trait('BufferedIterator', 'scala.collection', '[t]', ['Iterator'], [])
call scalaapi#trait('CustomParallelizable', 'scala.collection', '[t]', ['Parallelizable'], [])
call scalaapi#trait('DefaultMap', 'scala.collection', '[t]', ['Map'], [])
call scalaapi#object('GenIterable', 'scala.collection', '[o]', ['GenTraversableFactory', 'GenIterable'], [])
call scalaapi#trait('GenIterable', 'scala.collection', '[t]', ['GenIterableLike', 'GenIterable', 'GenTraversable', 'GenericTraversableTemplate', 'GenIterable'], [])
call scalaapi#trait('GenIterableLike', 'scala.collection', '[t]', ['GenTraversableLike'], [])
call scalaapi#object('GenMap', 'scala.collection', '[o]', ['GenMapFactory', 'GenMap'], [])
call scalaapi#trait('GenMap', 'scala.collection', '[t]', ['GenMapLike', 'GenMap', 'GenIterable'], [])
call scalaapi#trait('GenMapLike', 'scala.collection', '[t]', ['GenIterableLike', 'Equals', 'Parallelizable', 'ParMap'], [])
call scalaapi#object('GenSeq', 'scala.collection', '[o]', ['GenTraversableFactory', 'GenSeq'], [])
call scalaapi#trait('GenSeq', 'scala.collection', '[t]', ['GenSeqLike', 'GenSeq', 'GenIterable', 'Equals', 'GenericTraversableTemplate', 'GenSeq'], [])
call scalaapi#trait('GenSeqLike', 'scala.collection', '[t]', ['GenIterableLike', 'Equals', 'Parallelizable', 'ParSeq'], [])
call scalaapi#object('GenSet', 'scala.collection', '[o]', ['GenTraversableFactory', 'GenSet'], [])
call scalaapi#trait('GenSet', 'scala.collection', '[t]', ['GenSetLike', 'GenSet', 'GenIterable', 'GenericSetTemplate', 'GenSet'], [])
call scalaapi#trait('GenSetLike', 'scala.collection', '[t]', ['GenIterableLike', 'Boolean', 'Equals', 'Parallelizable', 'ParSet'], [])
call scalaapi#object('GenTraversable', 'scala.collection', '[o]', ['GenTraversableFactory', 'GenTraversable'], [])
call scalaapi#trait('GenTraversable', 'scala.collection', '[t]', ['GenTraversableLike', 'GenTraversable', 'GenTraversableOnce', 'GenericTraversableTemplate', 'GenTraversable'], [])
call scalaapi#trait('GenTraversableLike', 'scala.collection', '[t]', ['GenTraversableOnce', 'Parallelizable', 'ParIterable'], [])
call scalaapi#trait('GenTraversableOnce', 'scala.collection', '[t]', [], [])
call scalaapi#object('IndexedSeq', 'scala.collection', '[o]', ['IndexedSeqFactory', 'IndexedSeq'], [])
call scalaapi#trait('IndexedSeq', 'scala.collection', '[t]', ['Seq', 'GenericTraversableTemplate', 'IndexedSeq', 'IndexedSeqLike', 'IndexedSeq'], [])
call scalaapi#class('IndexedSeqLikeElements', 'scala.collection', '[c]', ['AbstractIterator', 'BufferedIterator', 'Serializable'], [])
call scalaapi#trait('IndexedSeqLike', 'scala.collection', '[t]', ['SeqLike'], [])
call scalaapi#trait('IndexedSeqOptimized', 'scala.collection', '[t]', ['IndexedSeqLike'], [])
call scalaapi#object('Iterable', 'scala.collection', '[o]', ['GenTraversableFactory', 'Iterable', 'TraversableFactory', 'Iterable'], [])
call scalaapi#trait('Iterable', 'scala.collection', '[t]', ['Traversable', 'GenIterable', 'GenericTraversableTemplate', 'Iterable', 'IterableLike', 'Iterable'], [])
call scalaapi#trait('IterableLike', 'scala.collection', '[t]', ['Equals', 'TraversableLike', 'GenIterableLike'], [])
call scalaapi#trait('IterableProxy', 'scala.collection', '[t]', ['Iterable', 'IterableProxyLike', 'Iterable'], [])
call scalaapi#trait('IterableProxyLike', 'scala.collection', '[t]', ['IterableLike', 'TraversableProxyLike'], [])
call scalaapi#object('IterableView', 'scala.collection', '[o]', [], [])
call scalaapi#trait('IterableView', 'scala.collection', '[t]', ['IterableViewLike', 'IterableView'], [])
call scalaapi#trait('IterableViewLikeAppended', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeDroppedWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeEmptyView', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeFiltered', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeFlatMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeForced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeSliced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeTakenWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeTransformed', 'scala.collection', '[t]', ['IterableView'], [])
call scalaapi#trait('IterableViewLikeZipped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLikeZippedAll', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('IterableViewLike', 'scala.collection', '[t]', ['Iterable', 'IterableLike', 'TraversableView', 'TraversableViewLike'], [])
call scalaapi#object('Iterator', 'scala.collection', '[o]', [], [])
call scalaapi#class('IteratorGroupedIterator', 'scala.collection', '[c]', ['AbstractIterator', 'Seq', 'Iterator', 'Seq'], [])
call scalaapi#trait('Iterator', 'scala.collection', '[t]', ['TraversableOnce'], [])
call scalaapi#object('JavaConversions', 'scala.collection', '[o]', ['WrapAsScala', 'WrapAsJava'], [])
call scalaapi#object('JavaConverters', 'scala.collection', '[o]', ['DecorateAsJava', 'DecorateAsScala'], [])
call scalaapi#object('LinearSeq', 'scala.collection', '[o]', ['SeqFactory', 'LinearSeq'], [])
call scalaapi#trait('LinearSeq', 'scala.collection', '[t]', ['Seq', 'GenericTraversableTemplate', 'LinearSeq', 'LinearSeqLike', 'LinearSeq'], [])
call scalaapi#trait('LinearSeqLike', 'scala.collection', '[t]', ['SeqLike'], [])
call scalaapi#trait('LinearSeqOptimized', 'scala.collection', '[t]', ['LinearSeqLike'], [])
call scalaapi#class('Map.WithDefault', 'scala.collection', '[c]', ['AbstractMap', 'Map', 'Serializable'], [])
call scalaapi#object('Map', 'scala.collection', '[o]', ['MapFactory', 'Map'], [])
call scalaapi#trait('Map', 'scala.collection', '[t]', ['Iterable', 'GenMap', 'MapLike', 'Map'], [])
call scalaapi#class('MapLikeDefaultKeySet', 'scala.collection', '[c]', ['AbstractSet', 'Set', 'Serializable'], [])
call scalaapi#class('MapLikeDefaultValuesIterable', 'scala.collection', '[c]', ['AbstractIterable', 'Iterable', 'Serializable'], [])
call scalaapi#class('MapLikeFilteredKeys', 'scala.collection', '[c]', ['AbstractMap', 'DefaultMap'], [])
call scalaapi#class('MapLikeMappedValues', 'scala.collection', '[c]', ['AbstractMap', 'DefaultMap'], [])
call scalaapi#trait('MapLike', 'scala.collection', '[t]', ['PartialFunction', 'IterableLike', 'GenMapLike', 'Subtractable', 'Parallelizable', 'ParMap'], [])
call scalaapi#trait('MapProxy', 'scala.collection', '[t]', ['Map', 'MapProxyLike', 'Map'], [])
call scalaapi#trait('MapProxyLike', 'scala.collection', '[t]', ['MapLike', 'IterableProxyLike'], [])
call scalaapi#trait('Parallel', 'scala.collection', '[t]', [], [])
call scalaapi#trait('Parallelizable', 'scala.collection', '[t]', [], [])
call scalaapi#class('Searching.SearchImpl', 'scala.collection', '[c]', [], [])
call scalaapi#class('Searching.SearchResult', 'scala.collection', '[c]', [], [])
call scalaapi#object('Searching', 'scala.collection', '[o]', [], [])
call scalaapi#object('Seq', 'scala.collection', '[o]', ['SeqFactory', 'Seq'], [])
call scalaapi#trait('Seq', 'scala.collection', '[t]', ['PartialFunction', 'Int', 'Iterable', 'GenSeq', 'GenericTraversableTemplate', 'Seq', 'SeqLike', 'Seq'], [])
call scalaapi#object('SeqLike', 'scala.collection', '[o]', [], [])
call scalaapi#trait('SeqLike', 'scala.collection', '[t]', ['IterableLike', 'GenSeqLike', 'Parallelizable', 'ParSeq'], [])
call scalaapi#trait('SeqProxy', 'scala.collection', '[t]', ['Seq', 'SeqProxyLike', 'Seq'], [])
call scalaapi#trait('SeqProxyLike', 'scala.collection', '[t]', ['SeqLike', 'IterableProxyLike'], [])
call scalaapi#object('SeqView', 'scala.collection', '[o]', [], [])
call scalaapi#trait('SeqView', 'scala.collection', '[t]', ['SeqViewLike', 'SeqView'], [])
call scalaapi#trait('SeqViewLikeAppended', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeDroppedWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeEmptyView', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeFiltered', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeFlatMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeForced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikePatched', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikePrepended', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeReversed', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeSliced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeTakenWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeTransformed', 'scala.collection', '[t]', ['SeqView'], [])
call scalaapi#trait('SeqViewLikeZipped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLikeZippedAll', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('SeqViewLike', 'scala.collection', '[t]', ['Seq', 'SeqLike', 'IterableView', 'IterableViewLike'], [])
call scalaapi#object('Set', 'scala.collection', '[o]', ['SetFactory', 'Set'], [])
call scalaapi#trait('Set', 'scala.collection', '[t]', ['Boolean', 'Iterable', 'GenSet', 'GenericSetTemplate', 'Set', 'SetLike', 'Set'], [])
call scalaapi#trait('SetLike', 'scala.collection', '[t]', ['IterableLike', 'GenSetLike', 'Subtractable', 'Parallelizable', 'ParSet'], [])
call scalaapi#trait('SetProxy', 'scala.collection', '[t]', ['Set', 'SetProxyLike', 'Set'], [])
call scalaapi#trait('SetProxyLike', 'scala.collection', '[t]', ['SetLike', 'IterableProxyLike'], [])
call scalaapi#object('SortedMap', 'scala.collection', '[o]', ['SortedMapFactory', 'SortedMap'], [])
call scalaapi#trait('SortedMap', 'scala.collection', '[t]', ['Map', 'SortedMapLike', 'SortedMap'], [])
call scalaapi#class('SortedMapLikeDefaultKeySortedSet', 'scala.collection', '[c]', ['SortedSet'], [])
call scalaapi#trait('SortedMapLike', 'scala.collection', '[t]', ['Sorted', 'MapLike'], [])
call scalaapi#object('SortedSet', 'scala.collection', '[o]', ['SortedSetFactory', 'SortedSet'], [])
call scalaapi#trait('SortedSet', 'scala.collection', '[t]', ['Set', 'SortedSetLike', 'SortedSet'], [])
call scalaapi#trait('SortedSetLike', 'scala.collection', '[t]', ['Sorted', 'SetLike'], [])
call scalaapi#object('Traversable', 'scala.collection', '[o]', ['GenTraversableFactory', 'Traversable', 'TraversableFactory', 'Traversable'], [])
call scalaapi#trait('Traversable', 'scala.collection', '[t]', ['TraversableLike', 'Traversable', 'GenTraversable', 'TraversableOnce', 'GenericTraversableTemplate', 'Traversable'], [])
call scalaapi#class('TraversableLikeWithFilter', 'scala.collection', '[c]', ['FilterMonadic'], [])
call scalaapi#trait('TraversableLike', 'scala.collection', '[t]', ['HasNewBuilder', 'FilterMonadic', 'TraversableOnce', 'GenTraversableLike', 'Parallelizable', 'ParIterable'], [])
call scalaapi#class('TraversableOnce.FlattenOps', 'scala.collection', '[c]', [], [])
call scalaapi#class('TraversableOnce.ForceImplicitAmbiguity', 'scala.collection', '[c]', [], [])
call scalaapi#class('TraversableOnce.MonadOps', 'scala.collection', '[c]', [], [])
call scalaapi#class('TraversableOnce.OnceCanBuildFrom', 'scala.collection', '[c]', ['TraversableOnce'], [])
call scalaapi#object('TraversableOnce', 'scala.collection', '[o]', [], [])
call scalaapi#trait('TraversableOnce', 'scala.collection', '[t]', ['GenTraversableOnce'], [])
call scalaapi#trait('TraversableProxy', 'scala.collection', '[t]', ['Traversable', 'TraversableProxyLike', 'Traversable'], [])
call scalaapi#trait('TraversableProxyLike', 'scala.collection', '[t]', ['TraversableLike', 'Proxy'], [])
call scalaapi#class('TraversableView.NoBuilder', 'scala.collection', '[c]', ['Builder'], [])
call scalaapi#object('TraversableView', 'scala.collection', '[o]', [], [])
call scalaapi#trait('TraversableView', 'scala.collection', '[t]', ['TraversableViewLike', 'TraversableView'], [])
call scalaapi#trait('TraversableViewLikeAppended', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeDroppedWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeEmptyView', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeFiltered', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeFlatMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeForced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeMapped', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeSliced', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeTakenWhile', 'scala.collection', '[t]', ['Transformed'], [])
call scalaapi#trait('TraversableViewLikeTransformed', 'scala.collection', '[t]', ['TraversableView'], [])
call scalaapi#trait('TraversableViewLike', 'scala.collection', '[t]', ['Traversable', 'TraversableLike', 'ViewMkString'], [])
call scalaapi#trait('ViewMkString', 'scala.collection', '[t]', [], [])

call scalaapi#package('scala.math', '', '[p]', [], [])
call scalaapi#object('BigDecimal.RoundingMode', 'scala.math', '[o]', ['Enumeration'], [])
call scalaapi#object('BigDecimal', 'scala.math', '[o]', ['Serializable'], [])
call scalaapi#class('BigDecimal', 'scala.math', '[c]', ['ScalaNumericConversions', 'Serializable'], [])
call scalaapi#object('BigInt', 'scala.math', '[o]', ['Serializable'], [])
call scalaapi#class('BigInt', 'scala.math', '[c]', ['ScalaNumericConversions', 'Serializable'], [])
call scalaapi#object('Equiv', 'scala.math', '[o]', ['LowPriorityEquiv', 'Serializable'], [])
call scalaapi#trait('Equiv', 'scala.math', '[t]', ['Serializable'], [])
call scalaapi#trait('Fractional.ExtraImplicits', 'scala.math', '[t]', [], [])
call scalaapi#object('Fractional.Implicits', 'scala.math', '[o]', ['ExtraImplicits'], [])
call scalaapi#object('Fractional', 'scala.math', '[o]', ['Serializable'], [])
call scalaapi#class('FractionalFractionalOps', 'scala.math', '[c]', [], [])
call scalaapi#trait('Fractional', 'scala.math', '[t]', ['Numeric'], [])
call scalaapi#trait('Integral.ExtraImplicits', 'scala.math', '[t]', [], [])
call scalaapi#object('Integral.Implicits', 'scala.math', '[o]', ['ExtraImplicits'], [])
call scalaapi#object('Integral', 'scala.math', '[o]', ['Serializable'], [])
call scalaapi#class('IntegralIntegralOps', 'scala.math', '[c]', [], [])
call scalaapi#trait('Integral', 'scala.math', '[t]', ['Numeric'], [])
call scalaapi#trait('LowPriorityEquiv', 'scala.math', '[t]', [], [])
call scalaapi#trait('LowPriorityOrderingImplicits', 'scala.math', '[t]', [], [])
call scalaapi#object('Numeric.BigDecimalAsIfIntegral', 'scala.math', '[o]', ['BigDecimalAsIfIntegral', 'BigDecimalOrdering'], [])
call scalaapi#trait('Numeric.BigDecimalAsIfIntegral', 'scala.math', '[t]', ['BigDecimalIsConflicted', 'Integral', 'BigDecimal'], [])
call scalaapi#trait('Numeric.BigDecimalIsConflicted', 'scala.math', '[t]', ['Numeric', 'BigDecimal'], [])
call scalaapi#object('Numeric.BigDecimalIsFractional', 'scala.math', '[o]', ['BigDecimalIsFractional', 'BigDecimalOrdering'], [])
call scalaapi#trait('Numeric.BigDecimalIsFractional', 'scala.math', '[t]', ['BigDecimalIsConflicted', 'Fractional', 'BigDecimal'], [])
call scalaapi#object('Numeric.BigIntIsIntegral', 'scala.math', '[o]', ['BigIntIsIntegral', 'BigIntOrdering'], [])
call scalaapi#trait('Numeric.BigIntIsIntegral', 'scala.math', '[t]', ['Integral', 'BigInt'], [])
call scalaapi#object('Numeric.ByteIsIntegral', 'scala.math', '[o]', ['ByteIsIntegral', 'ByteOrdering'], [])
call scalaapi#trait('Numeric.ByteIsIntegral', 'scala.math', '[t]', ['Integral', 'Byte'], [])
call scalaapi#object('Numeric.CharIsIntegral', 'scala.math', '[o]', ['CharIsIntegral', 'CharOrdering'], [])
call scalaapi#trait('Numeric.CharIsIntegral', 'scala.math', '[t]', ['Integral', 'Char'], [])
call scalaapi#object('Numeric.DoubleAsIfIntegral', 'scala.math', '[o]', ['DoubleAsIfIntegral', 'DoubleOrdering'], [])
call scalaapi#trait('Numeric.DoubleAsIfIntegral', 'scala.math', '[t]', ['DoubleIsConflicted', 'Integral', 'Double'], [])
call scalaapi#trait('Numeric.DoubleIsConflicted', 'scala.math', '[t]', ['Numeric', 'Double'], [])
call scalaapi#object('Numeric.DoubleIsFractional', 'scala.math', '[o]', ['DoubleIsFractional', 'DoubleOrdering'], [])
call scalaapi#trait('Numeric.DoubleIsFractional', 'scala.math', '[t]', ['DoubleIsConflicted', 'Fractional', 'Double'], [])
call scalaapi#trait('Numeric.ExtraImplicits', 'scala.math', '[t]', [], [])
call scalaapi#object('Numeric.FloatAsIfIntegral', 'scala.math', '[o]', ['FloatAsIfIntegral', 'FloatOrdering'], [])
call scalaapi#trait('Numeric.FloatAsIfIntegral', 'scala.math', '[t]', ['FloatIsConflicted', 'Integral', 'Float'], [])
call scalaapi#trait('Numeric.FloatIsConflicted', 'scala.math', '[t]', ['Numeric', 'Float'], [])
call scalaapi#object('Numeric.FloatIsFractional', 'scala.math', '[o]', ['FloatIsFractional', 'FloatOrdering'], [])
call scalaapi#trait('Numeric.FloatIsFractional', 'scala.math', '[t]', ['FloatIsConflicted', 'Fractional', 'Float'], [])
call scalaapi#object('Numeric.Implicits', 'scala.math', '[o]', ['ExtraImplicits'], [])
call scalaapi#object('Numeric.IntIsIntegral', 'scala.math', '[o]', ['IntIsIntegral', 'IntOrdering'], [])
call scalaapi#trait('Numeric.IntIsIntegral', 'scala.math', '[t]', ['Integral', 'Int'], [])
call scalaapi#object('Numeric.LongIsIntegral', 'scala.math', '[o]', ['LongIsIntegral', 'LongOrdering'], [])
call scalaapi#trait('Numeric.LongIsIntegral', 'scala.math', '[t]', ['Integral', 'Long'], [])
call scalaapi#object('Numeric.ShortIsIntegral', 'scala.math', '[o]', ['ShortIsIntegral', 'ShortOrdering'], [])
call scalaapi#trait('Numeric.ShortIsIntegral', 'scala.math', '[t]', ['Integral', 'Short'], [])
call scalaapi#object('Numeric', 'scala.math', '[o]', ['Serializable'], [])
call scalaapi#class('NumericOps', 'scala.math', '[c]', [], [])
call scalaapi#trait('Numeric', 'scala.math', '[t]', ['Ordering'], [])
call scalaapi#object('Ordered', 'scala.math', '[o]', [], [])
call scalaapi#trait('Ordered', 'scala.math', '[t]', [], [])
call scalaapi#object('Ordering.BigDecimal', 'scala.math', '[o]', ['BigDecimalOrdering'], [])
call scalaapi#trait('Ordering.BigDecimalOrdering', 'scala.math', '[t]', ['Ordering', 'BigDecimal'], [])
call scalaapi#object('Ordering.BigInt', 'scala.math', '[o]', ['BigIntOrdering'], [])
call scalaapi#trait('Ordering.BigIntOrdering', 'scala.math', '[t]', ['Ordering', 'BigInt'], [])
call scalaapi#object('Ordering.Boolean', 'scala.math', '[o]', ['BooleanOrdering'], [])
call scalaapi#trait('Ordering.BooleanOrdering', 'scala.math', '[t]', ['Ordering', 'Boolean'], [])
call scalaapi#object('Ordering.Byte', 'scala.math', '[o]', ['ByteOrdering'], [])
call scalaapi#trait('Ordering.ByteOrdering', 'scala.math', '[t]', ['Ordering', 'Byte'], [])
call scalaapi#object('Ordering.Char', 'scala.math', '[o]', ['CharOrdering'], [])
call scalaapi#trait('Ordering.CharOrdering', 'scala.math', '[t]', ['Ordering', 'Char'], [])
call scalaapi#object('Ordering.Double', 'scala.math', '[o]', ['DoubleOrdering'], [])
call scalaapi#trait('Ordering.DoubleOrdering', 'scala.math', '[t]', ['Ordering', 'Double'], [])
call scalaapi#trait('Ordering.ExtraImplicits', 'scala.math', '[t]', [], [])
call scalaapi#object('Ordering.Float', 'scala.math', '[o]', ['FloatOrdering'], [])
call scalaapi#trait('Ordering.FloatOrdering', 'scala.math', '[t]', ['Ordering', 'Float'], [])
call scalaapi#object('Ordering.Implicits', 'scala.math', '[o]', ['ExtraImplicits'], [])
call scalaapi#object('Ordering.Int', 'scala.math', '[o]', ['IntOrdering'], [])
call scalaapi#trait('Ordering.IntOrdering', 'scala.math', '[t]', ['Ordering', 'Int'], [])
call scalaapi#object('Ordering.Long', 'scala.math', '[o]', ['LongOrdering'], [])
call scalaapi#trait('Ordering.LongOrdering', 'scala.math', '[t]', ['Ordering', 'Long'], [])
call scalaapi#trait('Ordering.OptionOrdering', 'scala.math', '[t]', ['Ordering', 'Option'], [])
call scalaapi#object('Ordering.Short', 'scala.math', '[o]', ['ShortOrdering'], [])
call scalaapi#trait('Ordering.ShortOrdering', 'scala.math', '[t]', ['Ordering', 'Short'], [])
call scalaapi#object('Ordering.String', 'scala.math', '[o]', ['StringOrdering'], [])
call scalaapi#trait('Ordering.StringOrdering', 'scala.math', '[t]', ['Ordering'], [])
call scalaapi#object('Ordering.Unit', 'scala.math', '[o]', ['UnitOrdering'], [])
call scalaapi#trait('Ordering.UnitOrdering', 'scala.math', '[t]', ['Ordering', 'Unit'], [])
call scalaapi#object('Ordering', 'scala.math', '[o]', ['LowPriorityOrderingImplicits', 'Serializable'], [])
call scalaapi#class('OrderingOps', 'scala.math', '[c]', [], [])
call scalaapi#trait('Ordering', 'scala.math', '[t]', ['PartialOrdering', 'Serializable'], [])
call scalaapi#trait('PartiallyOrdered', 'scala.math', '[t]', [], [])
call scalaapi#trait('PartialOrdering', 'scala.math', '[t]', ['Equiv'], [])
call scalaapi#trait('ScalaNumericAnyConversions', 'scala.math', '[t]', [], [])
call scalaapi#trait('ScalaNumericConversions', 'scala.math', '[t]', ['ScalaNumericAnyConversions'], [])

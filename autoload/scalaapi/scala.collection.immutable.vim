call scalaapi#package('scala.collection.immutable', '', '[p]', [], [])
call scalaapi#class('AbstractMap', 'scala.collection.immutable', '[c]', ['collection.AbstractMap', 'Map'], [])
call scalaapi#class('BitSet.BitSet1', 'scala.collection.immutable', '[c]', ['BitSet'], [])
call scalaapi#class('BitSet.BitSet2', 'scala.collection.immutable', '[c]', ['BitSet'], [])
call scalaapi#class('BitSet.BitSetN', 'scala.collection.immutable', '[c]', ['BitSet'], [])
call scalaapi#object('BitSet', 'scala.collection.immutable', '[o]', ['BitSetFactory', 'BitSet', 'Serializable'], [])
call scalaapi#class('BitSet', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Int', 'SortedSet', 'Int', 'collection.BitSet', 'BitSetLike', 'BitSet', 'Serializable'], [])
call scalaapi#trait('DefaultMap', 'scala.collection.immutable', '[t]', ['Map'], [])
call scalaapi#class('HashMap.HashMap1', 'scala.collection.immutable', '[c]', ['HashMap'], [])
call scalaapi#class('HashMap.HashTrieMap', 'scala.collection.immutable', '[c]', ['HashMap'], [])
call scalaapi#object('HashMap', 'scala.collection.immutable', '[o]', ['ImmutableMapFactory', 'HashMap', 'Serializable'], [])
call scalaapi#class('HashMap', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'MapLike', 'HashMap', 'Serializable', 'CustomParallelizable', 'ParHashMap'], [])
call scalaapi#class('HashSet.HashSet1', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#class('HashSet.HashTrieSet', 'scala.collection.immutable', '[c]', ['HashSet'], [])
call scalaapi#object('HashSet', 'scala.collection.immutable', '[o]', ['ImmutableSetFactory', 'HashSet', 'Serializable'], [])
call scalaapi#class('HashSet', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'GenericSetTemplate', 'HashSet', 'SetLike', 'HashSet', 'CustomParallelizable', 'ParHashSet', 'Serializable'], [])
call scalaapi#class('IndexedSeq.Impl', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'IndexedSeq', 'Serializable'], [])
call scalaapi#object('IndexedSeq', 'scala.collection.immutable', '[o]', ['IndexedSeqFactory', 'IndexedSeq'], [])
call scalaapi#trait('IndexedSeq', 'scala.collection.immutable', '[t]', ['Seq', 'collection.IndexedSeq', 'GenericTraversableTemplate', 'IndexedSeq', 'IndexedSeqLike', 'IndexedSeq'], [])
call scalaapi#object('IntMap', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('IntMap', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'MapLike', 'IntMap'], [])
call scalaapi#object('Iterable', 'scala.collection.immutable', '[o]', ['GenTraversableFactory', 'Iterable', 'TraversableFactory', 'Iterable'], [])
call scalaapi#trait('Iterable', 'scala.collection.immutable', '[t]', ['Traversable', 'collection.Iterable', 'GenericTraversableTemplate', 'Iterable', 'IterableLike', 'Iterable', 'Parallelizable', 'ParIterable'], [])
call scalaapi#object('LinearSeq', 'scala.collection.immutable', '[o]', ['SeqFactory', 'LinearSeq'], [])
call scalaapi#trait('LinearSeq', 'scala.collection.immutable', '[t]', ['Seq', 'collection.LinearSeq', 'GenericTraversableTemplate', 'LinearSeq', 'LinearSeqLike', 'LinearSeq'], [])
call scalaapi#object('List', 'scala.collection.immutable', '[o]', ['SeqFactory', 'List', 'Serializable'], [])
call scalaapi#class('List', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'LinearSeq', 'Product', 'GenericTraversableTemplate', 'List', 'LinearSeqOptimized', 'List'], [])
call scalaapi#object('ListMap', 'scala.collection.immutable', '[o]', ['ImmutableMapFactory', 'ListMap', 'Serializable'], [])
call scalaapi#class('ListMapNode', 'scala.collection.immutable', '[c]', ['ListMap', 'Serializable'], [])
call scalaapi#class('ListMap', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'MapLike', 'ListMap', 'Serializable'], [])
call scalaapi#class('ListSet.ListSetBuilder', 'scala.collection.immutable', '[c]', ['Builder', 'ListSet'], [])
call scalaapi#object('ListSet', 'scala.collection.immutable', '[o]', ['ImmutableSetFactory', 'ListSet', 'Serializable'], [])
call scalaapi#class('ListSetNode', 'scala.collection.immutable', '[c]', ['ListSet', 'Serializable'], [])
call scalaapi#class('ListSet', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'GenericSetTemplate', 'ListSet', 'SetLike', 'ListSet', 'Serializable'], [])
call scalaapi#object('LongMap', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('LongMap', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'MapLike', 'LongMap'], [])
call scalaapi#class('Map.Map1', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'Serializable'], [])
call scalaapi#class('Map.Map2', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'Serializable'], [])
call scalaapi#class('Map.Map3', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'Serializable'], [])
call scalaapi#class('Map.Map4', 'scala.collection.immutable', '[c]', ['AbstractMap', 'Map', 'Serializable'], [])
call scalaapi#class('Map.WithDefault', 'scala.collection.immutable', '[c]', ['Map.WithDefault', 'Map'], [])
call scalaapi#object('Map', 'scala.collection.immutable', '[o]', ['ImmutableMapFactory', 'Map'], [])
call scalaapi#trait('Map', 'scala.collection.immutable', '[t]', ['Iterable', 'collection.Map', 'MapLike', 'Map'], [])
call scalaapi#class('MapLikeImmutableDefaultKeySet', 'scala.collection.immutable', '[c]', ['Set'], [])
call scalaapi#trait('MapLike', 'scala.collection.immutable', '[t]', ['collection.MapLike', 'Parallelizable', 'ParMap'], [])
call scalaapi#trait('MapProxy', 'scala.collection.immutable', '[t]', ['Map', 'MapProxyLike', 'Map'], [])
call scalaapi#object('Nil', 'scala.collection.immutable', '[o]', ['List', 'Product', 'Serializable'], [])
call scalaapi#class('NumericRange.Exclusive', 'scala.collection.immutable', '[c]', ['NumericRange'], [])
call scalaapi#class('NumericRange.Inclusive', 'scala.collection.immutable', '[c]', ['NumericRange'], [])
call scalaapi#object('NumericRange', 'scala.collection.immutable', '[o]', ['Serializable'], [])
call scalaapi#class('NumericRange', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'IndexedSeq', 'Serializable'], [])
call scalaapi#object('PagedSeq', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('PagedSeq', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'collection.IndexedSeq'], [])
call scalaapi#object('Queue', 'scala.collection.immutable', '[o]', ['SeqFactory', 'Queue', 'Serializable'], [])
call scalaapi#class('Queue', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'LinearSeq', 'GenericTraversableTemplate', 'Queue', 'LinearSeqLike', 'Queue', 'Serializable'], [])
call scalaapi#object('Range.BigDecimal', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#object('Range.BigInt', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#object('Range.Double', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('Range.Inclusive', 'scala.collection.immutable', '[c]', ['Range'], [])
call scalaapi#object('Range.Int', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#object('Range.Long', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('Range.Partial', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#object('Range', 'scala.collection.immutable', '[o]', ['Serializable'], [])
call scalaapi#class('Range', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'Int', 'IndexedSeq', 'Int', 'CustomParallelizable', 'Int', 'ParRange', 'Serializable'], [])
call scalaapi#object('Seq', 'scala.collection.immutable', '[o]', ['SeqFactory', 'Seq'], [])
call scalaapi#trait('Seq', 'scala.collection.immutable', '[t]', ['Iterable', 'collection.Seq', 'GenericTraversableTemplate', 'Seq', 'SeqLike', 'Seq', 'Parallelizable', 'ParSeq'], [])
call scalaapi#class('Set.Set1', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'Serializable'], [])
call scalaapi#class('Set.Set2', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'Serializable'], [])
call scalaapi#class('Set.Set3', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'Serializable'], [])
call scalaapi#class('Set.Set4', 'scala.collection.immutable', '[c]', ['AbstractSet', 'Set', 'Serializable'], [])
call scalaapi#object('Set', 'scala.collection.immutable', '[o]', ['ImmutableSetFactory', 'Set'], [])
call scalaapi#trait('Set', 'scala.collection.immutable', '[t]', ['Iterable', 'collection.Set', 'GenericSetTemplate', 'Set', 'SetLike', 'Set', 'Parallelizable', 'ParSet'], [])
call scalaapi#trait('SetProxy', 'scala.collection.immutable', '[t]', ['Set', 'SetProxyLike', 'Set'], [])
call scalaapi#object('SortedMap', 'scala.collection.immutable', '[o]', ['ImmutableSortedMapFactory', 'SortedMap'], [])
call scalaapi#class('SortedMapDefaultKeySortedSet', 'scala.collection.immutable', '[c]', ['SortedSet'], [])
call scalaapi#trait('SortedMap', 'scala.collection.immutable', '[t]', ['Map', 'collection.SortedMap', 'MapLike', 'SortedMap', 'SortedMapLike', 'SortedMap'], [])
call scalaapi#object('SortedSet', 'scala.collection.immutable', '[o]', ['ImmutableSortedSetFactory', 'SortedSet'], [])
call scalaapi#trait('SortedSet', 'scala.collection.immutable', '[t]', ['Set', 'collection.SortedSet', 'SortedSetLike', 'SortedSet'], [])
call scalaapi#object('Stack', 'scala.collection.immutable', '[o]', ['SeqFactory', 'Stack', 'Serializable'], [])
call scalaapi#class('Stack', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'LinearSeq', 'GenericTraversableTemplate', 'Stack', 'LinearSeqOptimized', 'Stack', 'Serializable'], [])
call scalaapi#object('Stream.hashcoloncolon', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#object('Stream.cons', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('Stream.Cons', 'scala.collection.immutable', '[c]', ['Stream'], [])
call scalaapi#class('Stream.ConsWrapper', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#object('Stream.Empty', 'scala.collection.immutable', '[o]', ['Stream'], [])
call scalaapi#class('Stream.StreamBuilder', 'scala.collection.immutable', '[c]', ['LazyBuilder', 'Stream'], [])
call scalaapi#class('Stream.StreamCanBuildFrom', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#object('Stream', 'scala.collection.immutable', '[o]', ['SeqFactory', 'Stream', 'Serializable'], [])
call scalaapi#class('StreamStreamWithFilter', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#class('Stream', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'LinearSeq', 'GenericTraversableTemplate', 'Stream', 'LinearSeqOptimized', 'Stream', 'Serializable'], [])
call scalaapi#class('StreamIteratorLazyCell', 'scala.collection.immutable', '[c]', [], [])
call scalaapi#class('StreamIterator', 'scala.collection.immutable', '[c]', ['AbstractIterator', 'Iterator'], [])
call scalaapi#trait('StreamView', 'scala.collection.immutable', '[t]', ['StreamViewLike', 'StreamView'], [])
call scalaapi#trait('StreamViewLikeAppended', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeDroppedWhile', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeEmptyView', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeFiltered', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeFlatMapped', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeForced', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeMapped', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikePatched', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikePrepended', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeReversed', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeSliced', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeTakenWhile', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeTransformed', 'scala.collection.immutable', '[t]', ['StreamView'], [])
call scalaapi#trait('StreamViewLikeZipped', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLikeZippedAll', 'scala.collection.immutable', '[t]', ['Transformed'], [])
call scalaapi#trait('StreamViewLike', 'scala.collection.immutable', '[t]', ['SeqView', 'SeqViewLike'], [])
call scalaapi#object('StringLike', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#trait('StringLike', 'scala.collection.immutable', '[t]', ['IndexedSeqOptimized', 'Char'], [])
call scalaapi#class('StringOps', 'scala.collection.immutable', '[c]', ['AnyVal', 'StringLike'], [])
call scalaapi#object('Traversable', 'scala.collection.immutable', '[o]', ['GenTraversableFactory', 'Traversable', 'TraversableFactory', 'Traversable'], [])
call scalaapi#trait('Traversable', 'scala.collection.immutable', '[t]', ['collection.Traversable', 'GenericTraversableTemplate', 'Traversable', 'TraversableLike', 'Traversable', 'Immutable'], [])
call scalaapi#object('TreeMap', 'scala.collection.immutable', '[o]', ['ImmutableSortedMapFactory', 'TreeMap', 'Serializable'], [])
call scalaapi#class('TreeMap', 'scala.collection.immutable', '[c]', ['SortedMap', 'SortedMapLike', 'TreeMap', 'MapLike', 'TreeMap', 'Serializable'], [])
call scalaapi#object('TreeSet', 'scala.collection.immutable', '[o]', ['ImmutableSortedSetFactory', 'TreeSet', 'Serializable'], [])
call scalaapi#class('TreeSet', 'scala.collection.immutable', '[c]', ['SortedSet', 'SortedSetLike', 'TreeSet', 'Serializable'], [])
call scalaapi#object('Vector', 'scala.collection.immutable', '[o]', ['IndexedSeqFactory', 'Vector', 'Serializable'], [])
call scalaapi#class('Vector', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'IndexedSeq', 'GenericTraversableTemplate', 'Vector', 'IndexedSeqLike', 'Vector', 'Serializable', 'CustomParallelizable', 'ParVector'], [])
call scalaapi#class('VectorBuilder', 'scala.collection.immutable', '[c]', ['Builder', 'Vector'], [])
call scalaapi#class('VectorIterator', 'scala.collection.immutable', '[c]', ['AbstractIterator', 'Iterator'], [])
call scalaapi#object('WrappedString', 'scala.collection.immutable', '[o]', [], [])
call scalaapi#class('WrappedString', 'scala.collection.immutable', '[c]', ['AbstractSeq', 'Char', 'IndexedSeq', 'Char', 'StringLike', 'WrappedString'], [])

call scalaapi#package('scala.collection.immutable', '', '[p]', '', [])
call scalaapi#class('AbstractMap', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('BitSet.BitSet1', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#class('BitSet.BitSet2', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#class('BitSet.BitSetN', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#object('BitSet', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('BitSet', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#trait('DefaultMap', 'scala.collection.immutable', '[t]', '[A, +B]', [])
call scalaapi#class('HashMap.HashMap1', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('HashMap.HashTrieMap', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#object('HashMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('HashMap', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('HashSet.HashSet1', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('HashSet.HashTrieSet', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('HashSet', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('HashSet', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('IndexedSeq.Impl', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('IndexedSeq', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('IndexedSeq', 'scala.collection.immutable', '[t]', '[+A]', [])
call scalaapi#object('IntMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('IntMap', 'scala.collection.immutable', '[c]', '[+T]', [])
call scalaapi#object('Iterable', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('Iterable', 'scala.collection.immutable', '[t]', '[+A]', [])
call scalaapi#object('LinearSeq', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('LinearSeq', 'scala.collection.immutable', '[t]', '[+A]', [])
call scalaapi#object('List', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('List', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#object('ListMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('ListMapNode', 'scala.collection.immutable', '[c]', '[B1 >: B]', [])
call scalaapi#class('ListMap', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('ListSet.ListSetBuilder', 'scala.collection.immutable', '[c]', '[Elem]', [])
call scalaapi#object('ListSet', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('ListSetNode', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#class('ListSet', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('LongMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('LongMap', 'scala.collection.immutable', '[c]', '[+T]', [])
call scalaapi#class('Map.Map1', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('Map.Map2', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('Map.Map3', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('Map.Map4', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#class('Map.WithDefault', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#object('Map', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('Map', 'scala.collection.immutable', '[t]', '[A, +B]', [])
call scalaapi#class('MapLikeImmutableDefaultKeySet', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#trait('MapLike', 'scala.collection.immutable', '[t]', '[A, +B, +This <: MapLike[A, B, This] with Map[A, B]]', [])
call scalaapi#trait('MapProxy', 'scala.collection.immutable', '[t]', '[A, +B]', [])
call scalaapi#object('Nil', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('NumericRange.Exclusive', 'scala.collection.immutable', '[c]', '[T]', [])
call scalaapi#class('NumericRange.Inclusive', 'scala.collection.immutable', '[c]', '[T]', [])
call scalaapi#object('NumericRange', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('NumericRange', 'scala.collection.immutable', '[c]', '[T]', [])
call scalaapi#object('PagedSeq', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('PagedSeq', 'scala.collection.immutable', '[c]', '[T]', [])
call scalaapi#object('Queue', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Queue', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#object('Range.BigDecimal', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#object('Range.BigInt', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#object('Range.Double', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Range.Inclusive', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#object('Range.Int', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#object('Range.Long', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Range.Partial', 'scala.collection.immutable', '[c]', '[T, U]', [])
call scalaapi#object('Range', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Range', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#object('Seq', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('Seq', 'scala.collection.immutable', '[t]', '[+A]', [])
call scalaapi#class('Set.Set1', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('Set.Set2', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('Set.Set3', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('Set.Set4', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('Set', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('Set', 'scala.collection.immutable', '[t]', '[A]', [])
call scalaapi#trait('SetProxy', 'scala.collection.immutable', '[t]', '[A]', [])
call scalaapi#object('SortedMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('SortedMapDefaultKeySortedSet', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#trait('SortedMap', 'scala.collection.immutable', '[t]', '[A, +B]', [])
call scalaapi#object('SortedSet', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('SortedSet', 'scala.collection.immutable', '[t]', '[A]', [])
call scalaapi#object('Stack', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Stack', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#object('Stream.hashcoloncolon', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#object('Stream.cons', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Stream.Cons', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#class('Stream.ConsWrapper', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('Stream.Empty', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Stream.StreamBuilder', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('Stream.StreamCanBuildFrom', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('Stream', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('StreamStreamWithFilter', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#class('Stream', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#class('StreamIteratorLazyCell', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#class('StreamIterator', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#trait('StreamView', 'scala.collection.immutable', '[t]', '[+A, +Coll]', [])
call scalaapi#trait('StreamViewLikeAppended', 'scala.collection.immutable', '[t]', '[B >: A]', [])
call scalaapi#trait('StreamViewLikeDroppedWhile', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeEmptyView', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeFiltered', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeFlatMapped', 'scala.collection.immutable', '[t]', '[B]', [])
call scalaapi#trait('StreamViewLikeForced', 'scala.collection.immutable', '[t]', '[B]', [])
call scalaapi#trait('StreamViewLikeMapped', 'scala.collection.immutable', '[t]', '[B]', [])
call scalaapi#trait('StreamViewLikePatched', 'scala.collection.immutable', '[t]', '[B >: A]', [])
call scalaapi#trait('StreamViewLikePrepended', 'scala.collection.immutable', '[t]', '[B >: A]', [])
call scalaapi#trait('StreamViewLikeReversed', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeSliced', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeTakenWhile', 'scala.collection.immutable', '[t]', '', [])
call scalaapi#trait('StreamViewLikeTransformed', 'scala.collection.immutable', '[t]', '[+B]', [])
call scalaapi#trait('StreamViewLikeZipped', 'scala.collection.immutable', '[t]', '[B]', [])
call scalaapi#trait('StreamViewLikeZippedAll', 'scala.collection.immutable', '[t]', '[A1 >: A, B]', [])
call scalaapi#trait('StreamViewLike', 'scala.collection.immutable', '[t]', '[+A, +Coll, +This <: StreamView[A, Coll] with StreamViewLike[A, Coll, This]]', [])
call scalaapi#object('StringLike', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('StringLike', 'scala.collection.immutable', '[t]', '[+Repr]', [])
call scalaapi#class('StringOps', 'scala.collection.immutable', '[c]', '', [])
call scalaapi#object('Traversable', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#trait('Traversable', 'scala.collection.immutable', '[t]', '[+A]', [])
call scalaapi#object('TreeMap', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('TreeMap', 'scala.collection.immutable', '[c]', '[A, +B]', [])
call scalaapi#object('TreeSet', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('TreeSet', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#object('Vector', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('Vector', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#class('VectorBuilder', 'scala.collection.immutable', '[c]', '[A]', [])
call scalaapi#class('VectorIterator', 'scala.collection.immutable', '[c]', '[+A]', [])
call scalaapi#object('WrappedString', 'scala.collection.immutable', '[o]', '', [])
call scalaapi#class('WrappedString', 'scala.collection.immutable', '[c]', '', [])

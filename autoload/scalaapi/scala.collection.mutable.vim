call scalaapi#package('scala.collection.mutable', '', '[p]', '', [])
call scalaapi#class('AbstractBuffer', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('AbstractIterable', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('AbstractMap', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#class('AbstractSeq', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('AbstractSet', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('AnyRefMap.AnyRefMapBuilder', 'scala.collection.mutable', '[c]', '[K <: AnyRef, V]', [])
call scalaapi#object('AnyRefMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('AnyRefMap', 'scala.collection.mutable', '[c]', '[K <: AnyRef, V]', [])
call scalaapi#object('ArrayBuffer', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ArrayBuffer', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('ArrayBuilder.ofBoolean', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofByte', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofChar', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofDouble', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofFloat', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofInt', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofLong', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofRef', 'scala.collection.mutable', '[c]', '[T <: AnyRef]', [])
call scalaapi#class('ArrayBuilder.ofShort', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayBuilder.ofUnit', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#object('ArrayBuilder', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ArrayBuilder', 'scala.collection.mutable', '[c]', '[T]', [])
call scalaapi#trait('ArrayLike', 'scala.collection.mutable', '[t]', '[A, +Repr]', [])
call scalaapi#class('ArrayOps.ofBoolean', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofByte', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofChar', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofDouble', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofFloat', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofInt', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofLong', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofRef', 'scala.collection.mutable', '[c]', '[T <: AnyRef]', [])
call scalaapi#class('ArrayOps.ofShort', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('ArrayOps.ofUnit', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#object('ArrayOps', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('ArrayOps', 'scala.collection.mutable', '[t]', '[T]', [])
call scalaapi#object('ArraySeq', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ArraySeq', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('ArrayStack', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ArrayStack', 'scala.collection.mutable', '[c]', '[T]', [])
call scalaapi#object('BitSet', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('BitSet', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#object('Buffer', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Buffer', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('BufferLike', 'scala.collection.mutable', '[t]', '[A, +This <: BufferLike[A, This] with Buffer[A]]', [])
call scalaapi#trait('BufferProxy', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('Builder', 'scala.collection.mutable', '[t]', '[-Elem, +To]', [])
call scalaapi#trait('Cloneable', 'scala.collection.mutable', '[t]', '[+A <: AnyRef]', [])
call scalaapi#class('DefaultEntry', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#trait('DefaultMapModel', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#object('DoubleLinkedList', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('DoubleLinkedList', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('DoubleLinkedListLike', 'scala.collection.mutable', '[t]', '[A, This <: Seq[A] with DoubleLinkedListLike[A, This]]', [])
call scalaapi#trait('FlatHashTable', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('GrowingBuilder', 'scala.collection.mutable', '[c]', '[Elem, To <: Growable[Elem]]', [])
call scalaapi#trait('HashEntry', 'scala.collection.mutable', '[t]', '[A, E]', [])
call scalaapi#object('HashMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('HashMap', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#object('HashSet', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('HashSet', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('HashTable', 'scala.collection.mutable', '[t]', '[A, Entry >: Null <: HashEntry[A, Entry]]', [])
call scalaapi#class('History', 'scala.collection.mutable', '[c]', '[Evt, Pub]', [])
call scalaapi#class('ImmutableMapAdaptor', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#class('ImmutableSetAdaptor', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('IndexedSeq', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('IndexedSeq', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('IndexedSeqLike', 'scala.collection.mutable', '[t]', '[A, +Repr]', [])
call scalaapi#trait('IndexedSeqOptimized', 'scala.collection.mutable', '[t]', '[A, +Repr]', [])
call scalaapi#object('IndexedSeqView', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('IndexedSeqViewDroppedWhile', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#trait('IndexedSeqViewFiltered', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#trait('IndexedSeqViewReversed', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#trait('IndexedSeqViewSliced', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#trait('IndexedSeqViewTakenWhile', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#trait('IndexedSeqViewTransformed', 'scala.collection.mutable', '[t]', '[B]', [])
call scalaapi#trait('IndexedSeqView', 'scala.collection.mutable', '[t]', '[A, +Coll]', [])
call scalaapi#object('Iterable', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Iterable', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('LazyBuilder', 'scala.collection.mutable', '[c]', '[Elem, +To]', [])
call scalaapi#object('LinearSeq', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('LinearSeq', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('LinkedEntry', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#object('LinkedHashMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('LinkedHashMapDefaultKeySet', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('LinkedHashMapFilteredKeys', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('LinkedHashMapMappedValues', 'scala.collection.mutable', '[c]', '[C]', [])
call scalaapi#class('LinkedHashMap', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#object('LinkedHashSet', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('LinkedHashSet', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('LinkedList', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('LinkedList', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('LinkedListLike', 'scala.collection.mutable', '[t]', '[A, This <: Seq[A] with LinkedListLike[A, This]]', [])
call scalaapi#object('ListBuffer', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ListBuffer', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('ListMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('ListMap', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#class('LongMap.LongMapBuilder', 'scala.collection.mutable', '[c]', '[V]', [])
call scalaapi#object('LongMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('LongMap', 'scala.collection.mutable', '[c]', '[V]', [])
call scalaapi#class('Map.WithDefault', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#object('Map', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Map', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#class('MapBuilder', 'scala.collection.mutable', '[c]', '[A, B, Coll <: GenMap[A, B] with GenMapLike[A, B, Coll]]', [])
call scalaapi#trait('MapLike', 'scala.collection.mutable', '[t]', '[A, B, +This <: MapLike[A, B, This] with Map[A, B]]', [])
call scalaapi#trait('MapProxy', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#trait('MultiMap', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#object('MutableList', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('MutableList', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('ObservableBuffer', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('ObservableMap', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#trait('ObservableSet', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#object('OpenHashMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('OpenHashMap', 'scala.collection.mutable', '[c]', '[Key, Value]', [])
call scalaapi#object('PriorityQueue', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('PriorityQueue', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('PriorityQueueProxy', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('Publisher', 'scala.collection.mutable', '[t]', '[Evt]', [])
call scalaapi#object('Queue', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('Queue', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('QueueProxy', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#object('ResizableArray', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('ResizableArray', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('RevertibleHistory', 'scala.collection.mutable', '[c]', '[Evt <: Undoable, Pub]', [])
call scalaapi#object('Seq', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Seq', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('SeqLike', 'scala.collection.mutable', '[t]', '[A, +This <: SeqLike[A, This] with Seq[A]]', [])
call scalaapi#object('Set', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Set', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('SetBuilder', 'scala.collection.mutable', '[c]', '[A, Coll <: collection.Set[A] with collection.SetLike[A, Coll]]', [])
call scalaapi#trait('SetLike', 'scala.collection.mutable', '[t]', '[A, +This <: SetLike[A, This] with Set[A]]', [])
call scalaapi#trait('SetProxy', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#object('SortedSet', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('SortedSet', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('Stack.StackBuilder', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('Stack', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('Stack', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('StackProxy', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#object('StringBuilder', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('StringBuilder', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#trait('Subscriber', 'scala.collection.mutable', '[t]', '[-Evt, -Pub]', [])
call scalaapi#trait('SynchronizedBuffer', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#trait('SynchronizedMap', 'scala.collection.mutable', '[t]', '[A, B]', [])
call scalaapi#class('SynchronizedPriorityQueue', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#class('SynchronizedQueue', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('SynchronizedSet', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#class('SynchronizedStack', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#object('Traversable', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#trait('Traversable', 'scala.collection.mutable', '[t]', '[A]', [])
call scalaapi#object('TreeSet', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('TreeSet', 'scala.collection.mutable', '[c]', '[A]', [])
call scalaapi#trait('Undoable', 'scala.collection.mutable', '[t]', '', [])
call scalaapi#class('UnrolledBuffer.Unrolled', 'scala.collection.mutable', '[c]', '[T]', [])
call scalaapi#object('UnrolledBuffer', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('UnrolledBuffer', 'scala.collection.mutable', '[c]', '[T]', [])
call scalaapi#object('WeakHashMap', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('WeakHashMap', 'scala.collection.mutable', '[c]', '[A, B]', [])
call scalaapi#class('WrappedArray.ofBoolean', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofByte', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofChar', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofDouble', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofFloat', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofInt', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofLong', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofRef', 'scala.collection.mutable', '[c]', '[T <: AnyRef]', [])
call scalaapi#class('WrappedArray.ofShort', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#class('WrappedArray.ofUnit', 'scala.collection.mutable', '[c]', '', [])
call scalaapi#object('WrappedArray', 'scala.collection.mutable', '[o]', '', [])
call scalaapi#class('WrappedArray', 'scala.collection.mutable', '[c]', '[T]', [])
call scalaapi#class('WrappedArrayBuilder', 'scala.collection.mutable', '[c]', '[A]', [])

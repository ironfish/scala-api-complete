call scalaapi#package('scala.collection.generic', '', '[p]', [], [])
call scalaapi#trait('AtomicIndexFlag', 'scala.collection.generic', '[t]', ['Signalling'], [])
call scalaapi#trait('BitSetFactory', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('CanBuildFrom', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('CanCombineFrom', 'scala.collection.generic', '[t]', ['CanBuildFrom', 'Parallel'], [])
call scalaapi#class('ClassTagTraversableFactoryGenericCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('ClassTagTraversableFactory', 'scala.collection.generic', '[c]', ['GenericClassTagCompanion'], [])
call scalaapi#trait('Clearable', 'scala.collection.generic', '[t]', [], [])
call scalaapi#class('DefaultSignalling', 'scala.collection.generic', '[c]', ['Signalling', 'VolatileAbort'], [])
call scalaapi#class('DelegatedContext', 'scala.collection.generic', '[c]', ['DelegatedSignalling'], [])
call scalaapi#trait('DelegatedSignalling', 'scala.collection.generic', '[t]', ['Signalling'], [])
call scalaapi#trait('FilterMonadic', 'scala.collection.generic', '[t]', [], [])
call scalaapi#class('GenericClassTagCompanion', 'scala.collection.generic', '[c]', [], [])
call scalaapi#trait('GenericClassTagTraversableTemplate', 'scala.collection.generic', '[t]', ['HasNewBuilder'], [])
call scalaapi#class('GenericCompanion', 'scala.collection.generic', '[c]', [], [])
call scalaapi#class('GenericOrderedCompanion', 'scala.collection.generic', '[c]', [], [])
call scalaapi#trait('GenericOrderedTraversableTemplate', 'scala.collection.generic', '[t]', ['HasNewBuilder'], [])
call scalaapi#trait('GenericParCompanion', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('GenericParMapCompanion', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('GenericParMapTemplate', 'scala.collection.generic', '[t]', ['GenericParTemplate', 'ParIterable'], [])
call scalaapi#trait('GenericParTemplate', 'scala.collection.generic', '[t]', ['GenericTraversableTemplate', 'HasNewCombiner'], [])
call scalaapi#trait('GenericSeqCompanion', 'scala.collection.generic', '[t]', ['GenericCompanion'], [])
call scalaapi#trait('GenericSetTemplate', 'scala.collection.generic', '[t]', ['GenericTraversableTemplate'], [])
call scalaapi#trait('GenericTraversableTemplate', 'scala.collection.generic', '[t]', ['HasNewBuilder'], [])
call scalaapi#class('GenMapFactoryMapCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('GenMapFactory', 'scala.collection.generic', '[c]', [], [])
call scalaapi#class('GenSeqFactory', 'scala.collection.generic', '[c]', ['GenTraversableFactory'], [])
call scalaapi#class('GenSetFactory', 'scala.collection.generic', '[c]', ['GenericCompanion'], [])
call scalaapi#class('GenTraversableFactoryGenericCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('GenTraversableFactory', 'scala.collection.generic', '[c]', ['GenericCompanion'], [])
call scalaapi#trait('Growable', 'scala.collection.generic', '[t]', ['Clearable'], [])
call scalaapi#trait('HasNewBuilder', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('HasNewCombiner', 'scala.collection.generic', '[t]', [], [])
call scalaapi#object('IdleSignalling', 'scala.collection.generic', '[o]', ['DefaultSignalling'], [])
call scalaapi#class('ImmutableMapFactory', 'scala.collection.generic', '[c]', ['MapFactory'], [])
call scalaapi#class('ImmutableSetFactory', 'scala.collection.generic', '[c]', ['SetFactory'], [])
call scalaapi#class('ImmutableSortedMapFactory', 'scala.collection.generic', '[c]', ['SortedMapFactory'], [])
call scalaapi#class('ImmutableSortedSetFactory', 'scala.collection.generic', '[c]', ['SortedSetFactory'], [])
call scalaapi#class('IndexedSeqFactory', 'scala.collection.generic', '[c]', ['SeqFactory'], [])
call scalaapi#object('IsSeqLike', 'scala.collection.generic', '[o]', [], [])
call scalaapi#trait('IsSeqLike', 'scala.collection.generic', '[t]', [], [])
call scalaapi#object('IsTraversableLike', 'scala.collection.generic', '[o]', [], [])
call scalaapi#trait('IsTraversableLike', 'scala.collection.generic', '[t]', [], [])
call scalaapi#object('IsTraversableOnce', 'scala.collection.generic', '[o]', [], [])
call scalaapi#trait('IsTraversableOnce', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('IterableForwarder', 'scala.collection.generic', '[t]', ['Iterable', 'TraversableForwarder'], [])
call scalaapi#class('MapFactory', 'scala.collection.generic', '[c]', ['GenMapFactory'], [])
call scalaapi#class('MutableMapFactory', 'scala.collection.generic', '[c]', ['MapFactory'], [])
call scalaapi#class('MutableSetFactory', 'scala.collection.generic', '[c]', ['SetFactory'], [])
call scalaapi#class('MutableSortedSetFactory', 'scala.collection.generic', '[c]', ['SortedSetFactory'], [])
call scalaapi#class('OrderedTraversableFactoryGenericCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('OrderedTraversableFactory', 'scala.collection.generic', '[c]', ['GenericOrderedCompanion'], [])
call scalaapi#class('ParFactoryGenericCanCombineFrom', 'scala.collection.generic', '[c]', ['CanCombineFrom'], [])
call scalaapi#class('ParFactory', 'scala.collection.generic', '[c]', ['GenTraversableFactory', 'GenericParCompanion'], [])
call scalaapi#class('ParMapFactoryCanCombineFromMap', 'scala.collection.generic', '[c]', ['CanCombineFrom'], [])
call scalaapi#class('ParMapFactory', 'scala.collection.generic', '[c]', ['GenMapFactory', 'GenericParMapCompanion'], [])
call scalaapi#class('ParSetFactoryGenericCanCombineFrom', 'scala.collection.generic', '[c]', ['CanCombineFrom'], [])
call scalaapi#class('ParSetFactory', 'scala.collection.generic', '[c]', ['GenSetFactory', 'GenericParCompanion'], [])
call scalaapi#class('SeqFactory', 'scala.collection.generic', '[c]', ['GenSeqFactory', 'TraversableFactory'], [])
call scalaapi#trait('SeqForwarder', 'scala.collection.generic', '[t]', ['Seq', 'IterableForwarder'], [])
call scalaapi#class('SetFactory', 'scala.collection.generic', '[c]', ['GenSetFactory', 'GenericSeqCompanion'], [])
call scalaapi#trait('Shrinkable', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('Signalling', 'scala.collection.generic', '[t]', [], [])
call scalaapi#trait('Sizing', 'scala.collection.generic', '[t]', [], [])
call scalaapi#object('SliceInterval', 'scala.collection.generic', '[o]', [], [])
call scalaapi#trait('Sorted', 'scala.collection.generic', '[t]', [], [])
call scalaapi#class('SortedMapFactorySortedMapCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('SortedMapFactory', 'scala.collection.generic', '[c]', [], [])
call scalaapi#class('SortedSetFactorySortedSetCanBuildFrom', 'scala.collection.generic', '[c]', ['CanBuildFrom'], [])
call scalaapi#class('SortedSetFactory', 'scala.collection.generic', '[c]', [], [])
call scalaapi#trait('Subtractable', 'scala.collection.generic', '[t]', [], [])
call scalaapi#class('TaggedDelegatedContext', 'scala.collection.generic', '[c]', ['DelegatedContext'], [])
call scalaapi#trait('TraversableFactory', 'scala.collection.generic', '[t]', ['GenTraversableFactory', 'GenericSeqCompanion'], [])
call scalaapi#trait('TraversableForwarder', 'scala.collection.generic', '[t]', ['Traversable'], [])
call scalaapi#trait('VolatileAbort', 'scala.collection.generic', '[t]', ['Signalling'], [])
